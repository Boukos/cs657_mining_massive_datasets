class Main()
	Initialize optimization parameters and lists
	Read in data file
	
	# RDD = [(‘userid,movieid,rating,timestamp’),…]
	Convert data file to RDD
	
	# Processed_RDD = [Rating(userid, movieid, rating),…]
	For each row in RDD
		Processed_RDD = Process_Data(row)
				
	Randomly split Processed_RDD into Train and Test RDDs

	# CV_RDD = [(~U[1,k], Rating(userid, movieid, rating)),…]	
	For each row in Train RDD
		Create uniform random number from 1 to k number of cross validation folds 
		Transform row to key value pair where key is ~U[1, k] and value is Rating_i 
		
	Run Grid Search over parameter lists
		Set model parameters
		Run Cross Validation on CV_RDD
			Split CV_RDD into k-1 training folds and 1 validation fold
			Combine training folds into cross validation training set
			Initialize model with grid search parameters
			Train model on cross validation training set
			Calculate evaluation metrics of model on the validation fold
			Store cross validation evaluation metrics and model parameters
		Calculate average evaluation metrics across folds
		Store evaluation averages
		
	Find the optimal training model with the min average loss
	Set model paramaters to optimal cross validation model
	Train optimal model on Train RDD
	Evaluate optimal model on Test RDD
	Save results to disk
	new_user_top_k_ratings = Train_New_User(optimal_model_parameters, Processed_RDD, new_user_ratings)
	
Method Get_Features(row):
	# RDD = [(‘userid’, ‘movieid’, ‘rating’, ‘timestamp’),…]
	Split each value delineated by commas
	
	# RDD = [(‘userid’, ‘movieid’, ‘rating’),…]
	Remove Time stamp from RDD
	
	# RDD = [(userid, movieid, rating),…]
	Convert the user_id and movie_id to ints and the rating to a float
	
	# RDD = [Rating(userid, movieid, rating),…]
	Convert the values to a Rating object
	
	Return Rating RDD

Method Train_New_User(model_parameters, Processed_RDD, new_user_ratings)
	Join Processed_RDD and new_user_ratings
	Initialize model with model_parameters
	Train model on Processed_RDD
	For all movies the new user has not reviewed
		Predict rating scores
	Sort predicted rating scores
	return top k ratings from sorted predicted ratings
	
